(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.Babelute=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){var Babelute=require("./lib/babelute");require("./lib/stringify");Babelute.parser=require("./lib/parser");require("./lib/document");module.exports=Babelute},{"./lib/babelute":2,"./lib/document":3,"./lib/parser":4,"./lib/stringify":5}],2:[function(require,module,exports){var Babelute=function(){this.__babelute__="default";this._lexems=[]},Actions=Babelute.actions={default:{log:function(opts,subject){console.log.apply(console,arguments)},if:function(opts,subject,args){if(args[0])args[1]._output(opts,subject)}}},Lexic=Babelute.lexic={},Lexem=function(lexic,name,args,handler,toString){this.lexic=lexic;this.name=name;this.args=args;if(handler)this.handler=handler;if(toString)this.babeluteString=toString};Babelute.Lexem=Lexem;function extendBabelute(lexicName,lexic){var Cl=function(){Babelute.call(this);this.__babelute__=lexicName};Cl.prototype=new Babelute;for(var i in lexic)Cl.prototype[i]=lexic[i];return Cl}function getMethod(req){var splitted=req.split(":"),lexicName=splitted[0],lexic=Babelute.getLexic(lexicName),methodName=splitted[1],method=lexic[methodName];if(!method)throw new Error("Babelute : method not found : "+req);if(method.__babelute__)return method;var temp=getInstance(lexicName,lexic);return function(lexems,args){temp._lexems=lexems;temp[methodName].apply(temp,args)}}function getClass(lexicName,lexic){var cache=lexic.__cache__=lexic.__cache__||{};return cache.BabeluteClass=cache.BabeluteClass||extendBabelute(lexicName,lexic)}function getInstance(lexicName,lexic){var Cl=getClass(lexicName,lexic);return lexic.__cache__.Instance=lexic.__cache__.Instance||new Cl}Babelute.extend=extendBabelute;Babelute.prototype={babelute:function(lexicName){var lexic=Babelute.getLexic(lexicName),Cl=getClass(lexicName,lexic),b=new Cl;b._lexems=this._lexems;this._append("babelute",[lexicName]);return b},_append:function(name,args,handler,toString){this._lexems.push(new Lexem(this.__babelute__,name,args,handler,toString));return this},_use:function(babelute){if(!babelute)return this;var args=[].slice.call(arguments,1),method=typeof babelute==="string"?getMethod(babelute):babelute;if(method.__babelute__)this._lexems=this._lexems.concat(method._lexems);else method(this._lexems,args);return this},_if:function(condition,babelute){if(condition)this._lexems=this._lexems.concat(babelute._lexems);return this},_each:function(arr,func){arr.forEach(func,this);return this},_toLexic:function(lexicName,methodName,method){Babelute.toLexic(lexicName,methodName,method)},_toActions:function(actionsName,methodName,method){Babelute.toActions(actionsName,methodName,method)},_output:function(opts,subject){if(typeof opts==="string")opts={actions:Babelute.getActions(opts)};var dico=opts.actions,handler,index=-1,f;subject=subject||(dico.__defaultSubject__?dico.__defaultSubject__(opts):{});while(handler=this._lexems[++index]){if(dico.__restrictions__&&!dico.__restrictions__[handler.lexic])continue;f=typeof handler.name==="string"?dico[handler.name]||Actions.default[handler.name]:handler.name;if(!f)continue;if(f.__babelute__)f._output(opts,subject);else f(opts,subject,handler.args)}if(dico.__finalise__)return dico.__finalise__(opts,subject);return subject},_translation:function(lexicName){var lexic=Babelute.getLexic(lexicName),b=new getClass(lexicName,lexic)();this._lexems.forEach(function(lexem){if(lexic[lexem.name])lexic[lexem.name].apply(this,lexem.args);else this._lexems.push(lexem)},b);return b},if:function(condition,babelute,elseBabelute){return this._append("if",[condition,babelute,elseBabelute])},log:function(){return this._append("log",[].slice.call(arguments))}};Babelute.b=function(lexicName){if(lexicName)return Babelute.initializer(lexicName)();return new Babelute};Babelute.initializer=function(lexicName){var lexic=Babelute.getLexic(lexicName),cache=lexic.__cache__=lexic.__cache__||{};if(cache&&cache.BabeluteInitializer)return cache.BabeluteInitializer;var Cl=getClass(lexicName,lexic);return cache.BabeluteInitializer=function(){return new Cl}};Babelute.getLexic=function(lexicName){var lexic=Lexic[lexicName];if(!lexic)throw new Error("Babelute : lexic not found : "+lexicName);return lexic};Babelute.getActions=function(actionsName){var actions=Actions[actionsName];if(!actions)throw new Error("Babelute : actions not found : "+actionsName);return actions};Babelute.toLexic=function(lexicName,methodName,method){var lexic=Lexic[lexicName]=Lexic[lexicName]||{};lexic.__cache__={};if(typeof methodName==="object"){if(methodName.forEach){methodName.forEach(function(methodName){lexic[methodName]=function(){return this._append(methodName,[].slice.call(arguments))}})}else for(var i in methodName)lexic[i]=methodName[i]}else if(!method)lexic[methodName]=function(){return this._append(methodName,[].slice.call(arguments))};else lexic[methodName]=method;return Babelute};Babelute.toActions=function(actionsName,methodName,method){var actions=Actions[actionsName]=Actions[actionsName]||{};if(typeof methodName==="object"){for(var i in methodName)actions[i]=methodName[i]}else actions[methodName]=method;return Babelute};Babelute.extendsLexic=function(lexicName,newName,methods){Babelute.toLexic(newName,Babelute.getLexic(lexicName));if(methods)Babelute.toLexic(newName,methods);return Babelute};Babelute.extendsActions=function(actionsName,newName,methods){Babelute.toActions(newName,Babelute.getActions(actionsName));if(methods)Babelute.toActions(newName,methods);return Babelute};module.exports=Babelute},{}],3:[function(require,module,exports){var Babelute=require("./babelute");var BabeluteDocNode=function(){Babelute.call(this)};function lexicToFirstLevel(lexicName,lexic){var out={};Object.keys(lexic).forEach(function(i){out[i]=function(){return this._append(lexicName,i,[].slice.call(arguments))}});return out}function getClass(lexicName,lexic){var cache=lexic.__cache__||{};return cache.FirstLevelClass=cache.FirstLevelClass||Babelute.extend(lexicName,lexicToFirstLevel(lexicName,lexic))}BabeluteDocNode.prototype=new Babelute;var proto={babelute:function(lexicName){var lexic=Babelute.getLexic(lexicName),b=new getClass(lexicName,lexic)();b._lexems=this._lexems;this._append("babelute",[lexicName]);return b}};for(var i in proto)BabeluteDocNode.prototype[i]=proto[i];Babelute.docInitializer=BabeluteDocNode.initializer=function(lexicName){var lexic=Babelute.getLexic(lexicName),cache=lexic.__cache__=lexic.__cache__||{};if(cache.FirstLevelInitializer)return cache.FirstLevelInitializer;var Cl=getClass(lexicName,lexic);return cache.FirstLevelInitializer=function(){return new Cl}};Babelute.doc=function(lexicName){if(lexicName)return BabeluteDocNode.initializer(lexicName)();return new BabeluteDocNode};module.exports=BabeluteDocNode},{"./babelute":2}],4:[function(require,module,exports){var elenpi=require("elenpi/v2"),r=elenpi.r,Parser=elenpi.Parser,Babelute=require("./babelute"),rules={babelute:r().space().zeroOrMore({rule:"lexem",separator:r().terminal(/^\s*/),pushTo:function(env,parent,obj){if(obj.lexic){if(parent._popLexic)env.lexics[env.lexics.length-1]=env.lexic;else env.lexics.push(obj.lexic);env.currentLexic=obj.lexic;parent._popLexic=true;var lexic=Babelute.getLexic(obj.lexic);for(var i in lexic)parent[i]=lexic[i];parent.__babelute__=obj.lexic}else if(env.asDoc)parent._append(obj.name,obj.args);else{if(!parent[obj.name])throw new Error("Babelute : no lexem found in current lexic ("+(env.currentLexic||"default")+") with :"+obj.name);parent[obj.name].apply(parent,obj.args)}}}).done(function(env,babelute,string){if(babelute._popLexic){env.lexics.pop();env.currentLexic=env.lexics[env.lexics.length-1]}return string}).space(),lexem:r().oneOf(r().terminal(/^([\w-_]+):/,function(env,obj,string,cap){obj.lexic=cap[1];return string}),r().terminal(/^([\w-_]+)\s*\(\s*/,function(env,obj,string,cap){obj.name=cap[1];obj.args=[];return string}).zeroOrMore({rule:"value",separator:r().terminal(/^\s*,\s*/),pushTo:function(env,parent,obj){parent.args.push(obj.value)}}).terminal(/^\s*\)/)),value:r().oneOf(r().terminal(/^[0-9]+/,function(env,obj,string,cap){obj.value=parseInt(cap[0],10);return string}),r().terminal(/^[0-9]*\.[0-9]+/,function(env,obj,string,cap){obj.value=parseFloat(cap[0],10);return string}),r().terminal(/^'((?:\\'|[^'])*)'/,function(env,obj,string,cap){obj.value=cap[1].replace(/\\'/g,"'");return string}),r().terminal(/^"((?:\\"|[^"])*)"/,function(env,obj,string,cap){obj.value=cap[1].replace(/\\"/g,'"');return string}),r().terminal(/^(true|false|null|undefined|NaN|Infinity)/,function(env,obj,string,cap){switch(cap[1]){case"true":obj.value=true;break;case"false":obj.value=false;break;case"null":obj.value=null;break;case"undefined":obj.value=undefined;break;case"NaN":obj.value=NaN;break;case"Infinity":obj.value=Infinity;break}return string}),r().one({rule:"object",set:function(env,parent,obj){parent.value=obj}}),r().one({rule:"array",as:function(){return[]},set:function(env,parent,obj){parent.value=obj}}),r().one({rule:"function",set:function(env,parent,obj){if(env.acceptFunctions)parent.value=Function.apply(null,obj.args.concat(obj.block))}}),r().one({rule:"babelute",as:function(env,descriptor){return Babelute.b(env.currentLexic)},set:function(env,parent,obj){parent.value=obj}})),object:r().terminal(/^\{\s*/).zeroOrMore({rule:r().terminal(/^([\w-_]+)|"([^"]*)"|'([^']*)'/,function(env,obj,string,cap){obj.key=cap[1];return string}).terminal(/^\s*:\s*/).one("value"),separator:r().terminal(/^\s*,\s*/),pushTo:function(env,parent,obj){parent[obj.key]=obj.value}}).terminal(/^\s*\}/),array:r().terminal(/^\[\s*/).zeroOrMore({rule:"value",separator:r().terminal(/^\s*,\s*/),pushTo:function(env,parent,obj){parent.push(obj.value)}}).terminal(/^\s*\]/),function:r().terminal(/^function\s*\(\s*/,function(env,obj,string,cap){obj.args=[];obj.block="";return string}).zeroOrMore({rule:r().terminal(/^[\w-_]+/,"key"),separator:r().terminal(/^\s*,\s*/),pushTo:function(env,parent,obj){parent.args.push(obj.key)}}).terminal(/^\s*\)\s*\{/).one("scopeBlock").done(function(env,obj,string){obj.block=obj.block.substring(0,obj.block.length-1);return string}),scopeBlock:r().oneOf(r().terminal(/^[^\{\}]*\{/,function(env,obj,string,cap){obj.block+=cap[0];return string}).oneOrMore("scopeBlock"),r().terminal(/^[^\}]*\}/,function(env,obj,string,cap){obj.block+=cap[0];return string}))};var parser=new Parser(rules,"babelute"),templateCache={};Babelute.parse=function(string,opt){opt=opt||{};var env={};for(var i in opt)env[i]=opt[i];env.lexics=[opt.mainLexic];env.currentLexic=opt.mainLexic;return templateCache[string]=parser.parse(string,"babelute",Babelute.b(opt.mainLexic),env)};module.exports=parser},{"./babelute":2,"elenpi/v2":6}],5:[function(require,module,exports){var Babelute=require("./babelute");function valueToString(val,tab){if(val&&val.__babelute__)return val.stringify(tab+1);switch(typeof val){case"function":return String(val);case"object":if(!val)return val;if(val.forEach)return"["+arrayToString(val,tab+1)+"]";return objectToString(val,tab+1);case"string":return'"'+val.replace(/"/g,'\\"')+'"';default:return val}}function arrayToString(arr,tab){if(!arr.length)return"";var index=arr.length,out="";while(index&&arr[index-1]===undefined)index--;if(index<arr.length)arr.splice(index,arr.length-index);for(var i=0,len=arr.length;i<len;++i)out+=(i?", ":"")+valueToString(arr[i],0);return out}function objectToString(obj,tab){var keys=Object.keys(obj),out="",key;for(var i=0,len=keys.length;i<len;++i){key=keys[i];out+=(i?",\n\t":"")+key+": "+valueToString(obj[key],0)}return"{\n\t"+out+"\n}"}Babelute.prototype.toString=function(){return this.stringify(0)};Babelute.prototype.stringify=function(tab){var lexems=this._lexems,out="",item;for(var i=0,len=lexems.length;i<len;++i){item=lexems[i];out+=(i?"\n":"")+(item.babeluteString?item.babeluteString():item.name?item.name+"("+(item.args?arrayToString(item.args,tab+1):"")+")":"")}return out};Babelute.arrayToString=arrayToString;Babelute.objectToString=objectToString;Babelute.valueToString=valueToString},{"./babelute":2}],6:[function(require,module,exports){(function(){var defaultSpaceRegExp=/^[\s\n\r]+/;function exec(string,rule,descriptor,parser,env){if(typeof rule==="string")rule=parser.rules[rule];var rules=rule._queue;for(var i=0,len=rules.length;i<len;++i){var current=rules[i];if(current.__elenpi__)string=exec(string,current,descriptor,parser,env);else string=current.call(parser,env,descriptor,string);if(string===false)return false;env.soFar=string.length}return string}function getRule(parser,name){var r=parser.rules[name];if(!r)throw new Error("elenpi : rules not found : "+rule);return r}function Rule(){this._queue=[];this.__elenpi__=true}Rule.prototype={done:function(callback){this._queue.push(callback);return this},log:function(title){title=title||"";return this.done(function(env,descriptor,string){console.log("elenpi log : ",title,string,descriptor);return string})},use:function(rule){var args=[].slice.call(arguments,1);return this.done(function(env,descriptor,string){if(typeof rule==="string")rule=getRule(this,rule);if(rule.__elenpi__)return exec(string,rule,descriptor,this,env);var r=new Rule;rule.apply(r,args);return exec(string,r,descriptor,this,env)})},optional:function(rule){return this.done(function(env,descriptor,string){if(typeof rule==="string")rule=getRule(this,rule);var newString=exec(string,rule,descriptor,this,env);return newString===false?string:newString})},terminal:function(reg,set){return this.done(function(env,descriptor,string){if(!string)return false;var cap=reg.exec(string);if(cap){if(set){if(typeof set==="string")descriptor[set]=cap[0];else return set.call(this,env,descriptor,string.substring(cap[0].length),cap)}return string.substring(cap[0].length)}return false})},char:function(test){return this.done(function(env,descriptor,string){if(!string)return false;if(string[0]===test)return string.substring(1);return false})},xOrMore:function(rule){var options=typeof rule==="string"||rule.__elenpi__?{rule:rule}:rule;options.minimum=options.minimum||0;return this.done(function(env,descriptor,string){if(typeof options.rule==="string")options.rule=getRule(this,options.rule);var newString=true,count=0;while(newString&&string){if(options.maximum&&options.maximum===count)break;var newDescriptor=options.as?options.as(env,descriptor):options.pushTo?{}:descriptor;newString=exec(string,options.rule,newDescriptor,this,env);if(newString!==false){count++;string=newString;if(!newDescriptor.skip&&options.pushTo)if(typeof options.pushTo==="string"){descriptor[options.pushTo]=descriptor[options.pushTo]||[];descriptor[options.pushTo].push(newDescriptor)}else options.pushTo(env,descriptor,newDescriptor);if(options.separator&&string){newString=exec(string,options.separator,newDescriptor,this,env);if(newString!==false)string=newString}}}if(count<options.minimum)return false;return string})},zeroOrMore:function(rule){return this.xOrMore(rule)},oneOrMore:function(rule){if(typeof rule==="string"||rule.__elenpi__)rule={rule:rule,minimum:1};return this.xOrMore(rule)},zeroOrOne:function(rule){var options=typeof rule==="string"||rule.__elenpi__?{rule:rule}:rule;return this.done(function(env,descriptor,string){if(typeof options.rule==="string")options.rule=getRule(this,options.rule);var newDescriptor=options.as?options.as(env,descriptor):options.set?{}:descriptor,res=exec(string,options.rule,newDescriptor,this,env);if(res!==false){if(!newDescriptor.skip&&options.set){if(typeof options.set==="string")descriptor[options.set]=newDescriptor;else options.set(env,descriptor,newDescriptor)}string=res}return string})},oneOf:function(rules){var options=typeof rules==="string"||rules.__elenpi__?{rules:[].slice.call(arguments)}:rules;return this.done(function(env,descriptor,string){if(!string)return false;var count=0;while(count<options.rules.length){var rule=options.rules[count];if(typeof rule==="string")rule=getRule(this,rule);var newDescriptor=options.as?options.as(env,descriptor):options.set?{}:descriptor,newString=exec(string,rule,newDescriptor,this,env);if(newString!==false){if(!newDescriptor.skip&&options.set){if(typeof options.set==="string")descriptor[options.set]=newDescriptor;else options.set(env,descriptor,newDescriptor)}return newString}count++}return false})},one:function(rule){var options=typeof rule==="string"||rule&&rule.__elenpi__?{rule:rule}:rule;return this.done(function(env,descriptor,string){if(typeof options.rule==="string")options.rule=getRule(this,options.rule);var newDescriptor=options.as?options.as(env,descriptor):options.set?{}:descriptor,newString=exec(string,options.rule,newDescriptor,this,env);if(newString!==false&&!newDescriptor.skip&&options.set){if(typeof options.set==="string")descriptor[options.set]=newDescriptor;else options.set(env,descriptor,newDescriptor)}return newString})},skip:function(){return this.done(function(env,descriptor,string){descriptor.skip=true;return string})},space:function(needed){return this.done(function(env,descriptor,string){if(!string)if(needed)return false;else return string;var cap=(this.rules.space||defaultSpaceRegExp).exec(string);if(cap)return string.substring(cap[0].length);else if(needed)return false;return string})},end:function(needed){return this.done(function(env,descriptor,string){if(!string||!needed)return string;return false})}};var Parser=function(rules,defaultRule){this.rules=rules;this.defaultRule=defaultRule};Parser.prototype={exec:function(string,descriptor,rule,env){env=env||{};if(!rule)rule=this.rules[this.defaultRule];return exec(string,rule,descriptor,this,env)},parse:function(string,rule,descriptor,env){env=env||{};descriptor=descriptor||{};var ok=this.exec(string,descriptor,rule,env);if(ok===false||ok&&ok.length>0){var pos=string.length-env.soFar;console.error("elenpi parsing failed : (pos:"+pos+") near :\n",string.substring(Math.max(pos-1,0),pos+50));return false}return descriptor}};var elenpi={r:function(){return new Rule},Rule:Rule,Parser:Parser};if(typeof module!=="undefined"&&module.exports)module.exports=elenpi;else this.elenpi=elenpi})()},{}]},{},[1])(1)});
